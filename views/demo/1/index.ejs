<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
    <meta name="viewport" content="width=1100">
    <meta name="author" content="" />
    <meta name="description" content="" />
    <meta name="keywords" content="" />
    <title>Wave demo</title>
    <style type="text/css">
    *{padding: 0;margin: 0;}
    </style>
</head>
<body>
<canvas id="landLoading"></canvas>
</body>

<script>

    function showWave(){
        var canvas = document.querySelector('canvas#landLoading');
        var ctx = canvas.getContext('2d');

        var stageWidth = 0;
        var stageHeight = 0;
        var stageWidth2 = 0;
        var stageHeight2 = 0;
        var totalLength2 = 0;

        var distanceX = 0;

        var config = {
            canvasHeight : 152,
            height: 18, //曲线波动高度
            waveLength: 180, //曲线波动长度
            curveFactor: 1.6, //曲线因子 左右距离
            speed: 12, //曲线速度
            lineWidth : 2, //曲线粗细
            strokeStyle : 'green', //曲线颜色
            fillStyle : 'transparent' //曲线底部颜色填充
            // fillStyle : '#00ce9e' //曲线底部颜色填充
        }

        var DELTA_WIDTH = 1;

        function init(){
            window.onresize = onResize;
            onResize();
            render();
        }

        function onResize(){
            stageWidth = canvas.width = window.innerWidth;
            stageHeight = canvas.height = window.innerHeight;
            // stageHeight = canvas.height = config.canvasHeight;
            // todo 高度判断
            stageWidth2 = stageWidth / 2;
            stageHeight2 = stageHeight / 2;
            totalLength2 = Math.ceil(stageWidth2 / DELTA_WIDTH) * DELTA_WIDTH;
            redraw();
        }

        function render(){
            // stats.begin();
            redraw();
            requestAnimationFrame(render);
            // stats.end();
        }

        function _getHeight(distanceX, x) {
            var offsetX = ((distanceX + x) /totalLength2 - 1) * (totalLength2 / config.waveLength);
            var waveFactor = Math.cos((x / totalLength2 - 1) * Math.PI / 2);
            return Math.cos(offsetX * Math.PI) * Math.pow(waveFactor, config.curveFactor) * config.height;
        }

        function redraw(){
            var x = stageWidth2 - totalLength2;
            var toX = x + totalLength2 * 2;
            var centerY = stageHeight2;
            ctx.clearRect(0, 0, stageWidth, stageHeight);
            ctx.beginPath();
            // ctx.moveTo(x, stageHeight);
            for(; x < toX; x+=DELTA_WIDTH){
                ctx.lineTo(x, centerY - _getHeight(distanceX, x));
            }
            // ctx.lineTo(x-DELTA_WIDTH, stageHeight);
            ctx.lineWidth = config.lineWidth;
            ctx.strokeStyle = config.strokeStyle;
            ctx.fillStyle = config.fillStyle;
            ctx.fill();
            ctx.stroke();
            distanceX += config.speed;
        }
        init();
    }

    showWave();

</script>

</html>
